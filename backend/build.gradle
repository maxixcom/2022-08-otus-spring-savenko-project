plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    id 'com.google.cloud.tools.jib' version '3.3.1'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group = 'io.github.maxixcom.otus.movies'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.5")
    set('jjwtVersion', '0.11.5')
    set('mockitoVersion', '4.8.0')
    set('assertjVersion', '3.23.1')
    set('jpamodelgenVersion', '5.6.7.Final')
    set('mapstructVersion', '1.5.3.Final')
    set('jsoupVersion', '1.15.4')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'

    // jwt
    implementation("io.jsonwebtoken:jjwt-api:$jjwtVersion")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:$jjwtVersion")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:$jjwtVersion")

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:$jpamodelgenVersion"

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'

    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"

    implementation(platform("software.amazon.awssdk:bom:2.20.7"))
    implementation("software.amazon.awssdk:s3")

    implementation "org.jsoup:jsoup:$jsoupVersion"

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

gitProperties {
    extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps
}

jib {
    from {
        image = "openjdk:17-jdk"
    }
    to {
        image = project.provider { "movies-online/${project.name}:" + project.ext.gitProps['git.branch'] }
    }
    container {
        ports = ['9905']
        creationTime = project.provider { project.ext.gitProps['git.commit.time'] }
    }
}